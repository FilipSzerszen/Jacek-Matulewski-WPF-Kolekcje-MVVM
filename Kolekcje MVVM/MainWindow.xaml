<Window x:Class="Kolekcje_MVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Kolekcje_MVVM"
        xmlns:mw="clr-namespace:Kolekcje_MVVM.ModelWidoku"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:jm="clr-namespace:JacekMatulewski.WpfUtils;assembly=JacekMatulewski.WpfUtils"
        mc:Ignorable="d"
        Title="Zadania" Height="500" Width="500">
    <Window.DataContext>
        <mw:Zadania/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="stylPrzycisku" TargetType="Button">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="85"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="boolToVisibility"/>
        <local:BoolToBrushKonwerter x:Key="czyZrealizowaneToBrush"/>
        <local:BoolToBrushKonwerter x:Key="czyPoTerminieToBrush" KolorDlaFałszu="Green" KolorDlaPrawdy="Red"/>
        <local:ZadanieConverter x:Key="twórzZadanie"/>
        <Style TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBox Text="{Binding Path=SelectedDate, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Zapisz}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <TextBlock Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Text="Liczba zadań: ">
            <Run Text="{Binding Path=ListaZadań.Count, Mode=OneWay}"/>
        </TextBlock>
        <ListBox x:Name="lbListaZadań" Margin="10,35,10,200" ItemsSource="{Binding Path=ListaZadań}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical" Margin="3">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Opis, Mode=OneWay}" FontSize="20"
                                       Foreground="{Binding CzyZrealizowane, Converter={StaticResource czyZrealizowaneToBrush}}"/>
                            <Button Content="Zrealizowane" Command="{Binding Path=OznaczJakoZrealizowane}"
                                    Style="{StaticResource stylPrzycisku}"
                                    Visibility="{Binding RelativeSource={RelativeSource self}, Path=IsEnabled, Mode=OneWay, Converter={StaticResource boolToVisibility}}"/>
                            <Button Content="Niezrealizowane" Command="{Binding Path=OznaczJakoNiezrealizowane}"
                                    Style="{StaticResource stylPrzycisku}"
                                    Visibility="{Binding RelativeSource={RelativeSource self}, Path=IsEnabled, Mode=OneWay, Converter={StaticResource boolToVisibility}}"/>
                        </StackPanel>
                        <TextBlock>
                            Termin: <Run Text="{Binding Path=PlanowanyTerminRealizacji, Mode=OneWay, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL}"
                                         Foreground="{Binding CzyZadaniePozostajeNiezrealizowanePoTerminie, Mode=OneWay, Converter={StaticResource czyPoTerminieToBrush}}"/>
                            Utworzone: <Run Text="{Binding Path=DataUtworzenia, Mode=OneWay, StringFormat={}{0:dd MMMM yyyy}, ConverterCulture=pl-PL}"/>
                            Priorytet: <Run Text="{Binding Path=Priorytet, Mode=OneWay}"/>

                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <jm:NotificationDialogBox x:Name="notyficationDialogBox1" Caption="Zadania" 
                                        CommandBefore="{Binding UsuńZadanie}" 
                                        CommandParameter="{Binding ElementName=lbListaZadań, Path=SelectedIndex}"/>
        
        <jm:ConditionalMessageDialogBox x:Name="questionYesNo" Caption="Zadania" Icon="Question" Buttons="YesNo"
                                        CommandYes="{Binding ElementName=notyficationDialogBox1, Path=Show}" 
                                        CommandParameter="Zadanie zostało usunięte"
                                        IsDialogBypassed="{Binding ElementName=lbListaZadań, Path=SelectedValue.CzyZrealizowane}"
                                        DialogBypassButton="Yes"/>

        <Button Content="Usuń zadanie" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,165" 
                Width="100" Height="25" Style="{StaticResource stylPrzycisku}" Command="{Binding ElementName=questionYesNo, Path=Show}"
                CommandParameter="Czy jesteś pewien, że chcesz usunąć niezrealizowane zadanie?"/>

        <jm:SimpleMessageDialogBox x:Name="simpleMessageDialogBox" Caption="Zadania WPF"/>
        <Button Content="O..." HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="395,0,10,165" Width="60" Height="25"
                Style="{StaticResource stylPrzycisku}" Command="{Binding ElementName=simpleMessageDialogBox, Path=Show}" 
                CommandParameter="Zadania WPF&#x0a; Filip Szerszeń 2023"/>
        
        <GroupBox Header="Nowe zadanie" Margin="10,0,10,10" MinWidth="420" Height="140" VerticalAlignment="Bottom">
            <Grid>
                <Label Content="Opis:" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <TextBox x:Name="tbOpis" Height="23" Margin="10,30,10,0" VerticalAlignment="Top"/>
                <Label Content="Priorytet:" Margin="10,60,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <ComboBox x:Name="cbPriorytet" Margin="10,85,0,0" Width="120" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <ComboBoxItem>Mniej ważne</ComboBoxItem>
                    <ComboBoxItem IsSelected="true">Ważne</ComboBoxItem>
                    <ComboBoxItem>Krytyczne</ComboBoxItem>
                </ComboBox>
                <Label Content="Termin realizacji" Margin="160,60,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                <jm:NotificationDialogBox x:Name="notificationDialogBox" Caption="Zadania" CommandAfter="{Binding DodajZadanie}">
                    <jm:NotificationDialogBox.CommandParameter>
                        <MultiBinding Converter="{StaticResource twórzZadanie}">
                            <Binding ElementName="tbOpis" Path="Text"/>
                            <Binding ElementName="dpTerminRealizacji" Path="SelectedDate"/>
                            <Binding ElementName="cbPriorytet" Path="SelectedIndex"/>
                        </MultiBinding>
                    </jm:NotificationDialogBox.CommandParameter>
                </jm:NotificationDialogBox>

                <DatePicker x:Name="dpTerminRealizacji"  Margin="160,85,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
                            SelectedDate="{x:Static s:DateTime.Now}"/>
                <Button Content="Dodaj zadanie" Margin="0,83,10,0" HorizontalAlignment="Right" VerticalAlignment="Top" 
                        Width="100" Height="25" Style="{StaticResource stylPrzycisku}" 
                        Command="{Binding ElementName=notificationDialogBox, Path=Show}"
                        CommandParameter="Zadanie zostało dodane">
                    
                </Button>

            </Grid>
        </GroupBox>
    </Grid>
</Window>
